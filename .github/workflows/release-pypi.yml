name: Publish (PyPI)

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag (es. v0.1.0) per verifica opzionale."
        required: false
        default: ""

jobs:
  publish:
    if: github.event_name == 'workflow_dispatch' || github.event.release.prerelease == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine tomli

      - name: Verify version matches tag
        run: |
          TAG="${{ github.event.release.tag_name || inputs.tag }}"
          if [ -z "$TAG" ]; then
            TAG=$(git describe --tags --abbrev=0 || true)
          fi
          echo "Tag: $TAG"
          if [ -n "$TAG" ]; then
            PYPROJECT_VERSION=$(python - <<'PY'
            import tomli
            with open("pyproject.toml", "rb") as f:
                print(tomli.load(f)["project"]["version"])
            PY
            )
            CLEAN_TAG="${TAG#v}"
            echo "pyproject version: $PYPROJECT_VERSION"
            echo "clean tag       : $CLEAN_TAG"
            test "$PYPROJECT_VERSION" = "$CLEAN_TAG"
          fi

      - name: Build sdist+wheel
        run: python -m build

      - name: Twine check
        run: python -m twine check dist/*

      - name: Upload to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: python -m twine upload dist/*
